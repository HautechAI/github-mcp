name: E2E (MCP Inspector)

on:
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  e2e:
    name: Inspector tools/list
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.90.0
          components: clippy
      - uses: Swatinem/rust-cache@v2
      - name: Lint (clippy)
        run: cargo clippy --all-targets -- -D warnings
      - name: Build (release)
        run: cargo build --release --locked

      - name: Inspector tools/list
        timeout-minutes: 10
        run: |
          export MCP_DIAG_LOG="$GITHUB_WORKSPACE/mcp-diag.log"
          npx @modelcontextprotocol/inspector-cli --cli ./target/release/github-mcp --method tools/list --timeout-ms 30000 > out-tools.json || npx @modelcontextprotocol/inspector-cli --cli ./target/release/github-mcp --method tools/list > out-tools.json
          if [ -f out-tools.json ]; then cat out-tools.json; else echo "out-tools.json missing"; fi
          # Validate tools/list succeeded and includes a stable GitHub tool.
          # Note: MCP "ping" is a base method (not a tool) per spec; Inspector cannot call arbitrary JSON-RPC methods as tools.
          node - <<'NODE'
          const fs=require('fs');
          const o=JSON.parse(fs.readFileSync('out-tools.json','utf8'));
          const tools = Array.isArray(o?.result?.tools) ? o.result.tools
                       : Array.isArray(o?.tools) ? o.tools
                       : Array.isArray(o) ? o
                       : null;
          if(!Array.isArray(tools) || tools.length===0) {
            console.error('invalid tools/list result');
            process.exit(1);
          }
          const names = new Set(tools.map(t=>t?.name));
          if(!(names.has('list_issues') || names.has('get_issue'))) {
            console.error('expected github tools missing');
            process.exit(1);
          }
          console.log('tools/list OK with', tools.length, 'tools');
          NODE
      - name: Smoke stdio LF-only
        run: |
          node ./scripts/smoke_stdio_lf.js ./target/release/github-mcp
      - name: Upload MCP diagnostics
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: mcp-diag
          path: |
            mcp-diag.log
            diag-smoke.log
            out-tools.json

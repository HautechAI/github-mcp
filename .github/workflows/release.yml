name: Release Binaries

permissions:
  contents: write

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  build:
    name: Build Artifacts
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
          - os: macos-14
            target: aarch64-apple-darwin
          - os: macos-14
            target: x86_64-apple-darwin
          - os: windows-latest
            target: x86_64-pc-windows-msvc
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.90.0
          targets: ${{ matrix.target }}
      - uses: Swatinem/rust-cache@v2
      - name: Install cross (Linux targets)
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          cargo install cross --git https://github.com/cross-rs/cross
      - name: Build
        shell: bash
        run: |
          if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
            cross build --release --target ${{ matrix.target }}
          else
            cargo build --release --target ${{ matrix.target }}
          fi
      - name: Package
        shell: bash
        run: |
          set -euo pipefail
          BIN=github-mcp
          OUTDIR=dist/${{ matrix.target }}
          mkdir -p "$OUTDIR"
          # Name outputs uniquely per target to avoid collisions when merging artifacts
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            SRC="target/${{ matrix.target }}/release/${BIN}.exe"
            FILENAME="${BIN}-${{ matrix.target }}.exe"
          else
            SRC="target/${{ matrix.target }}/release/${BIN}"
            FILENAME="${BIN}-${{ matrix.target }}"
          fi
          cp "$SRC" "$OUTDIR/$FILENAME"
          # Write per-target checksum file inside each OUTDIR
          (
            cd dist
            sha256sum "${{ matrix.target }}/$FILENAME" > "${{ matrix.target }}/SHA256SUMS-${{ matrix.target }}.txt" \
              || shasum -a 256 "${{ matrix.target }}/$FILENAME" > "${{ matrix.target }}/SHA256SUMS-${{ matrix.target }}.txt"
          )
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: github-mcp-${{ matrix.target }}
          path: dist/${{ matrix.target }}/*

  release:
    name: Attach to Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true
      - name: List artifacts
        run: ls -R dist
      - name: Combine checksums
        shell: bash
        run: |
          set -euo pipefail
          shopt -s nullglob globstar
          files=(dist/**/SHA256SUMS-*.txt)
          if [[ ${#files[@]} -eq 0 ]]; then
            echo "No per-target checksum files found"
            exit 1
          fi
          cat "${files[@]}" > dist/SHA256SUMS.txt
          echo "Combined checksums count:" && wc -l dist/SHA256SUMS.txt
      - name: Collect binaries to dist root
        shell: bash
        run: |
          set -euo pipefail
          shopt -s nullglob globstar
          # Move uniquely named binaries to dist/ root for release upload
          for f in dist/**/github-mcp-*; do
            [[ -f "$f" ]] || continue
            mv -f "$f" dist/
          done
          echo "Assets in dist/:" && ls -l dist/
      - name: Upload release assets
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/github-mcp-*
            dist/SHA256SUMS.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
